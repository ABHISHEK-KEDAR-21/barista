{
 "add_total_row": 1,
 "creation": "2020-03-05 14:53:01.492814",
 "disable_prepared_report": 0,
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "idx": 0,
 "is_standard": "Yes",
 "javascript": "let apps=[];\ngetAppName();\nfrappe.query_reports[\"Types of Test Case on Doctype\"] = {\n    \"filters\": [{\n        \"fieldname\": \"app_name\",\n        \"label\": __(\"App\"),\n        \"fieldtype\": \"Select\",\n        \"default\": '',\n        \"reqd\": 1,\n        \"options\":apps\n    }]\n}\n\nfunction getAppName() {\napps=[];\n    frappe.call({\n        method: 'frappe.desk.reportview.get',\n        args: {\n            doctype: 'Module Def',\n            fields: [\"`tabModule Def`.`app_name`\"],\n            order_by: \"`tabModule Def`.`modified` desc\",\n            start: 0,\n            page_length: 2000,\n            with_comment_count: true\n        },\n        freeze: true,\n freeze_message: 'Loading report please wait',\n        async: false,\n        callback: function(r) {\n            if (!r.exc) {\n                let all_apps = r.message.values;\n                all_apps.forEach((a) => {\n                    let app_name = a[0];\n                    if (!apps.includes(app_name)) {\n                        apps.push(app_name);\n                    }\n                });\n              \n                return apps;\n            }\n        }\n    });\n}",
 "letter_head": "ElasticRun",
 "modified": "2020-03-06 16:22:34.812697",
 "modified_by": "Administrator",
 "module": "Barista",
 "name": "Types of Test Case on Doctype",
 "owner": "Administrator",
 "prepared_report": 0,
 "query": "select dt.name as 'DocType',\ndtc.total_test_case as 'Total Test Cases:Number',\ndtcc.create_test_case as 'Create Type Test Cases',\ndtcu.update_test_case as 'Update Type Test Cases',\ndtcr.read_test_case as 'Read Type Test Cases',\ndtcd.delete_test_case as 'Delete Type Test Cases',\ndtcw.workflow_test_case as 'Workflow Type Test Cases',\ndtcf.function_test_case as 'Function Type Test Cases'\n\n from `tabDocType` dt inner join `tabModule Def` md on md.name=dt.module\nleft join (select count(tc.name) as 'total_test_case',tc.testcase_doctype as 'doctype' from `tabTest Case` tc group by tc.testcase_doctype) dtc on dtc.doctype=dt.name\nleft join (select count(tc.name) as 'create_test_case',tc.testcase_doctype as 'doctype' from `tabTest Case`tc where tc.testcase_type='CREATE'  group by tc.testcase_doctype) dtcc on dtcc.doctype=dt.name\nleft join (select count(tc.name) as 'update_test_case',tc.testcase_doctype as 'doctype' from `tabTest Case` tc where tc.testcase_type='UPDATE' group by tc.testcase_doctype) dtcu on dtcu.doctype=dt.name\nleft join (select count(tc.name) as 'read_test_case',tc.testcase_doctype as 'doctype' from `tabTest Case` tc where tc.testcase_type='READ' group by tc.testcase_doctype) dtcr on dtcr.doctype=dt.name\nleft join (select count(tc.name) as 'delete_test_case',tc.testcase_doctype as 'doctype' from `tabTest Case` tc where tc.testcase_type='DELETE' group by tc.testcase_doctype) dtcd on dtcd.doctype=dt.name\nleft join (select count(tc.name) as 'workflow_test_case',tc.testcase_doctype as 'doctype' from `tabTest Case` tc where tc.testcase_type='WORKFLOW' group by tc.testcase_doctype) dtcw on dtcw.doctype=dt.name\nleft join (select count(tc.name) as 'function_test_case',tc.testcase_doctype as 'doctype' from `tabTest Case` tc where tc.testcase_type='FUNCTION' group by tc.testcase_doctype) dtcf on dtcf.doctype=dt.name\n\nwhere md.app_name=%(app_name)s and dtc.total_test_case is not null\norder by dt.name",
 "ref_doctype": "Test Case",
 "report_name": "Types of Test Case on Doctype",
 "report_type": "Query Report",
 "roles": []
}